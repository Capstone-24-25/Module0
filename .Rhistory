load("~/Documents/Laura/UCSB/Teaching/Capstone/ClassContent/pstat197aF23Updated/materials/slides/data/class-summaries.RData")
LS()
ls()
tbl1
tbl0
tbl2
tbl3
tbl0
?kmeans
getwd()
setwd("C:/Users/lnbar/Documents/Laura/UCSB/Teaching/Capstone/ClassContent/class-data")
# read in metadata for variable name replacement
metadata <- read_csv('survey-metadata.csv')
library(tidyverse)
library(lubridate)
# read in metadata for variable name replacement
metadata <- read_csv('survey-metadata.csv')
# read in responses
responses_raw <- read_csv('ds-capstone-intake-F23.csv',
col_names = pull(metadata, variable.name),
skip = 1) %>%
mutate(response.id = row_number())
responses_raw
# separate by survey section
personal_info <- responses_raw %>%
select(response.id, starts_with('p.')) %>%
rename_with(~gsub('p.', '', .x))
background_raw <- responses_raw %>%
select(response.id, starts_with('b.')) %>%
rename_with(~gsub('b.', '', .x))
interest_raw <- responses_raw %>%
select(response.id, starts_with('pr.')) %>%
rename_with(~gsub('pr.', '', .x))
# clean for distribution to class by removing identifiable info
background_raw %>%
# coerce string of classes taken into individual binary indicators
separate_rows(updv.clas, sep = ';') %>%
mutate(value = 'yes') %>%
pivot_wider(names_from = updv.clas,
values_from = value,
values_fill = "no") %>%
# drop long text (privacy)
select(-ends_with('.txt')) %>%
# shorten proficiency descriptions
mutate(across(ends_with('.prof'),
~str_sub(.x, start = 1, end = 3))) %>%
# combine research experience (for privacy) drop distinction between ds/nonds
mutate(across(contains('rsrch'), function(.x){.x == 'Yes'})) %>%
mutate(rsrch = dsrsrch + othrsrch > 0) %>%
select(-dsrsrch, -othrsrch) %>%
# filter by consent to share
filter(consent == 'Yes') %>%
# export
write_csv('background-clean.csv')
interest_raw %>%
# drop long text (privacy)
select(-ends_with('.txt')) %>%
# shorten project type descriptions
mutate(type = str_sub(jtype, start = 24, end = 26)) %>%
mutate(type = if_else(type == '', 'both', type)) %>%
select(-jtype) %>%
# filter by consent
filter(consent == 'Yes') %>%
# export
write_csv('interest-clean.csv')
# retrieve class survey data
url <- 'https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/'
background <- paste(url, 'background-clean.csv', sep = '') %>%
read_csv()
interest <- paste(url, 'interest-clean.csv', sep = '') %>%
read_csv()
metadata <- paste(url, 'survey-metadata.csv', sep = '') %>%
read_csv()
# retrieve class survey data
url <- 'https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/'
background <- paste(url, 'background-clean.csv', sep = '') %>%
read_csv()
interest <- paste(url, 'interest-clean.csv', sep = '') %>%
read_csv()
# retrieve class survey data
url <- 'https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/'
background <- paste(url, 'background-clean.csv', sep = '') %>%
read_csv()
interest <- paste(url, 'interest-clean.csv', sep = '') %>%
read_csv()
metadata <- paste(url, 'survey-metadata.csv', sep = '') %>%
read_csv()
background <- paste(url, 'background-clean.csv', sep = '') %>%
read_csv()
background <- paste(url, 'background-clean.csv', sep = '') %>%
read_csv()
interest <- paste(url, 'interest-clean.csv', sep = '') %>%
read_csv()
metadata <- paste(url, 'survey-metadata.csv', sep = '') %>%
read_csv()
read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/background-clean.csv')
read_csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/background-clean.csv')
background <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/background-clean.csv')
# retrieve class survey data
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab2-tidyverse/data/'
background <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/background-clean.csv')
interest <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/interest-clean.csv')
background <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/background-clean.csv')
interest <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/interest-clean.csv')
interest <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/interest-clean.csv')
background <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/background-clean.csv')
interest <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/interest-clean.csv')
interest <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/interest-clean.csv')
metadata <- paste(url, 'survey-metadata.csv', sep = '') %>%
read_csv()
background <- read.csv('https://raw.githubusercontent.com/PSTAT197-F23/pstat197a/main/materials/labs/lab2-tidyverse/data/background-clean.csv')
getwd()
setwd("C:/Users/lnbar/Documents/Laura/UCSB/Teaching/Capstone/ClassContent/Module0/module0-class-survey-f23/data")
setwd("C:/Users/lnbar/Documents/Laura/UCSB/Teaching/Capstone/ClassContent/Module0/module0-class-survey-f23")
library(tidyverse)
background <- read_csv('data/background-clean.csv')
interest <- read_csv('data/interest-clean.csv')
# one variable, one summary
background %>%
select(math.comf) %>%
summarize_all(mean)
# many variables, same summary
background %>%
select(contains('comf')) %>%
summarise_all(.funs = mean)
background %>%
select(contains('comf')) %>%
summarise_all(.funs = median)
# many variables, many summaries
background %>%
select(contains('comf')) %>%
summarise_all(.funs = list(mean = mean,
median = median,
min = min,
max = max)) %>%
gather(stat, val) %>%
separate(stat, into = c('variable', 'stat'), sep = '_') %>%
spread(stat, val)
# proficiency responses are factors
background %>%
pull(math.prof) %>%
factor() %>%
fct_count()
# but levels are ordered
background %>%
pull(math.prof) %>%
factor(levels = c('Beg', 'Int', 'Adv')) %>%
fct_count()
# same summary, each variable
background %>%
select(contains('.prof')) %>%
mutate_all(~factor(.x, levels = c('Beg', 'Int', 'Adv'))) %>%
summarize_all(fct_count)
# clean up names a little
background %>%
select(contains('.prof')) %>%
mutate_all(~factor(.x, levels = c('Beg', 'Int', 'Adv'))) %>%
rename_with(~gsub('.prof', '', .x)) %>%
summarize_all(fct_count)
# what about converting to numeric? is this meaningful??
background %>%
select(contains('.prof')) %>%
mutate_all(~factor(.x, levels = c('Beg', 'Int', 'Adv'))) %>%
rename_with(~gsub('.prof', '', .x)) %>%
mutate_all(as.numeric) %>%
summarize_all(.funs = list(mean = mean,
median = median)) %>%
gather(stat, val) %>%
separate(stat, into = c('variable', 'stat'), sep = '_') %>%
spread(stat, val)
# unique combinations of proficiency ratings
proficiency <- background %>%
select(contains('.prof')) %>%
mutate_all(~factor(.x, levels = c('Beg', 'Int', 'Adv'))) %>%
mutate_all(as.numeric)
proficiency %>%
rename_with(~gsub('.prof', '', .x)) %>%
group_by(prog, math, stat) %>%
count()
# unique combinations of comfort ratings
comfort <- background %>%
select(contains('comf'))
comfort %>%
rename_with(~gsub('.comf', '', .x)) %>%
group_by(prog, math, stat) %>%
count()
# cluster responses into three groups
set.seed(92922)
clust <- bind_cols(proficiency, comfort) %>%
kmeans(centers = 3)
clust %>% broom::tidy()
# plot clusters
bind_cols(proficiency, comfort) %>%
svd() %>%
broom::tidy(matrix = 'u') %>%
mutate(PC = paste('pc', PC, sep = '')) %>%
pivot_wider(names_from = PC, values_from = value) %>%
select(pc1, pc2) %>%
mutate(clust = clust$cluster) %>%
ggplot(aes(x = pc1, y = pc2)) +
geom_point(aes(color = factor(clust))) +
labs(x = 'projection 1',
y = 'projection 2',
color = 'cluster')
# summary of classes taken
classes <- background %>%
select(11:29) %>%
mutate_all(~factor(.x, levels = c('no', 'yes'))) %>%
mutate_all(~as.numeric(.x) - 1) %>%
summarize_all(mean) %>%
gather() %>%
arrange(desc(value))
classes %>%
ggplot(aes(x = value, y = reorder(key, value))) +
geom_point() +
scale_x_sqrt() +
labs(x = 'proportion of class', y = '')
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tibble")
remove.packages("tibble")
install.packages("tibble")
install.packages("tibble")
library(tibble)
install.packages("tibble")
